        #To Install Prerequisit packages
apt-get update && apt-get install -y apt-transport-https
sudo apt update
sudo apt -y install curl apt-transport-https

        #To add K8S repository
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
       
       #To install Docker
apt-get install docker.io -y
sudo apt update
       
       #To install tools like kubeadm,kubelet,kudectl and Kubernetes CNI
apt-get install -y kubelet kubeadm kubectl kubernetes-cni

        #To access K8S you may get an error, to resolve taht error use this CMD's
cat > /etc/docker/daemon.json <<EOF
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2",
  "storage-opts": [
    "overlay2.override_kernel_check=true"
  ]
}
EOF

mkdir -p /etc/systemd/system/docker.service.d

systemctl daemon-reload
systemctl restart docker

        #####{from now on steps only in mater}#####
        #3o the initializing in MASTER only (i.e., To manage the cluster) 
kubeadm init
        ##NOW in last few linew after giving init CMD you will get token something like
        ##(kubeadm join 172.31.0.64:6443 --token 9vgn3n.dboxbi5uvtksefap         --discovery-token-ca-cert-hash sha256:616cbe83451bc83624566705864867fb5030b87f2977d9bb01f21d56ce002adc
        ## copy TOKEN and do below CMDs aldo 
        
        #To start cluster
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

        #THEN you need to create a network for all 3 MASTER, NODE1,NODE2 to communicate
        ##on browser copy below url
        ###https://kubernetes.io/docs/concepts/cluster-administration/addons/##

kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
        ##WITH this the network is created and cluster is setup
        
        ##Now Run the token cmd in nodes 
        #WITH this all nodes connects to master and you can check
kubectl get pods
        #shows both nodes and status should be active
        
        #now create a yml file to create multipile deployments, pods and services by defining all of them in yml file
vi nginx-deployment.yml

        ###NOW deploy the yml file i.e.s create the deployment by giving CMD
kubectl apply -f nginx-deployment.yml

        # Then check the pods which will be up and running in the nodes by sharing the no of replica sete to both nodes in roundrobin fashion
kubectl get pods -o wide
        
